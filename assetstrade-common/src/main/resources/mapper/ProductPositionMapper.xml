<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinhui.common.mapper.ProductPositionMapper" >
  <resultMap id="BaseResultMap" type="com.jinhui.common.entity.po.ProductPosition" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="position_vol" property="positionVol" jdbcType="DECIMAL" />
    <result column="gather_date" property="gatherDate" jdbcType="DATE" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    id, user_id, user_name, product_id, product_name, position_vol, gather_date, account_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from product_position
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from product_position
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jinhui.common.entity.po.ProductPosition" >
    <!--
      WARNING - @mbggenerated
    -->
    insert into product_position (id, user_id, user_name, 
      product_id, product_name, position_vol, 
      gather_date, account_name)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{productId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{positionVol,jdbcType=DECIMAL}, 
      #{gatherDate,jdbcType=DATE}, #{accountName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jinhui.common.entity.po.ProductPosition" >
    <!--
      WARNING - @mbggenerated
    -->
    insert into product_position
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="positionVol != null" >
        position_vol,
      </if>
      <if test="gatherDate != null" >
        gather_date,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="positionVol != null" >
        #{positionVol,jdbcType=DECIMAL},
      </if>
      <if test="gatherDate != null" >
        #{gatherDate,jdbcType=DATE},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jinhui.common.entity.po.ProductPosition" >
    <!--
      WARNING - @mbggenerated
    -->
    update product_position
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="positionVol != null" >
        position_vol = #{positionVol,jdbcType=DECIMAL},
      </if>
      <if test="gatherDate != null" >
        gather_date = #{gatherDate,jdbcType=DATE},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jinhui.common.entity.po.ProductPosition" >
    <!--
      WARNING - @mbggenerated
    -->
    update product_position
    set user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      position_vol = #{positionVol,jdbcType=DECIMAL},
      gather_date = #{gatherDate,jdbcType=DATE},
      account_name = #{accountName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <update id="subtractPosition">
    update product_position
    set  position_vol = (position_vol - #{amount}),
    gather_date = now()
    where product_id = #{productId}
    and user_id = #{userId}
    and (position_vol - #{amount}) &gt;= 0

  </update>

  <update id="addPosition">
    update product_position
    set  position_vol = (position_vol + #{amount}),
    gather_date = now()
    where product_id = #{productId}
    and user_id = #{userId}
  </update>

  <select id="selectByUserIdAndProductId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from product_position
    where product_id = #{productId}
    and user_id = #{userId}

  </select>

  <select id="selectTotalPosition" resultType="java.math.BigDecimal">
    select
    IFNULL (sum(position_vol),0)
    from product_position
    where account_name = #{accountName}
    and user_id = #{userId}
  </select>

</mapper>